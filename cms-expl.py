#!/usr/bin/python3
# -*- coding: utf-8 -*-
# Clan_X12 - HaOMing_X12
# Mirror : https://zone-xsec.com/archive/team/Clan_X12          
##############################
#####################################
import requests
import re
import os
import sys
import json
import random
import time
from multiprocessing.dummy import Pool
from time import time as timer
from platform import system
from colorama import Fore, Style, init
import warnings

warnings.simplefilter('ignore', requests.packages.urllib3.exceptions.InsecureRequestWarning)
init(autoreset=True)

# Warna
abang = Fore.RED
ijo = Fore.GREEN
kuning = Fore.YELLOW
birtu = Fore.BLUE
ungu = Fore.MAGENTA
biru = Fore.CYAN
abu = Fore.LIGHTBLACK_EX
putih = Fore.WHITE

year = time.strftime("%y")
month = time.strftime("%m")

def logo():
    clear = Style.RESET_ALL
    colors = [Fore.CYAN, Fore.GREEN, Fore.BLUE, Fore.MAGENTA, Fore.RED, Fore.WHITE]

    x = """
          \033[31m\   \033[31m/
   \033[34m----- (9\033[31m"-_-\033[34m)9  \033[37mVs  \033[34m6(\033[31mx_x"\033[34m6) -----
   
   \033[32m>--------------------------------<
   - Clan_X12 Pembantai Special Mirror - 
      - CMS CHECKER !!! - HaOMing_X12 -
   \033[32m>---------------------------------<

   [-] 1. CMS Wordpress
   [-] 2. CMS Joomla
   [-] 3. CMS Laravel
   [-] 4. CMS  OpenCart
   [-] 5. CMS Drupal
   [-] 6. CMS Prestashop
   [-] 7. CMS Magneto 
   [-] 8. CMS vBulletin
   [-] 9. CMS osCommerce
   [-] 10. expl_Kcfinder 
   [-] 11. revip
   [-] 12. revsub
   [-] 13. expl_Ftp
   [-] 14. expl_phpunit
   [-] 15. expl_laravel
   \033[32m>---------------------------------<  
   
"""
    for N, line in enumerate(x.split("\n")):
        sys.stdout.write(f"{random.choice(colors)}{line}{clear}\n")
        time.sleep(0.05)

logo()

pilihmas = input(':~# \033[34mChoose\033[32m Number : ')

users = {'User-Agent': 'Mozilla/5.0 (Linux; Android 7.0; SM-G892A Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.107 Mobile Safari/537.36'}

def cms_wordpress(url):
    try:
        cek = requests.get(url + '/xmlrpc.php?rsd', headers=users, timeout=15)
        if 'Wordpress' in cek.text:
            print(kuning + '[Found Cms Wordpress --> ]' + ijo + url)
            with open('cms/wp.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Cms Wordpress --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_joomla(url):
    try:
        ceks = requests.get(url + '/administrator/index.php', headers=users, timeout=15).text
        if 'Joomla!' in ceks and '/language/en-GB/en-GB.xml' in ceks:
            print(kuning + '[Found Cms Joomla --> ]' + ijo + url)
            with open('cms/joomla.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Cms Joomla --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_laravel(url):
    try:
        get_source = requests.get(url, headers=users, timeout=15).cookies
        if 'X-XSRF-TOKEN' in get_source and 'XSRF-TOKEN' in get_source:
            print(kuning + '[Found Laravel Cookies --> ]' + ijo + url)
            with open('cms/laravel.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Laravel Cookies --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_opencart(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'index.php?route=common/home' in ceks:
            print(kuning + '[Found CMS Opencart --> ]' + ijo + url)
            with open('cms/opencart.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS Opencart--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_drupal(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'sites/default' in ceks:
            print(kuning + '[Found CMS Drupal --> ]' + ijo + url)
            with open('cms/drupal.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS Drupal--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_prestashop(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'sites/default' in ceks:
            print(kuning + '[Found CMS Prestashop --> ]' + ijo + url)
            with open('cms/prestashop.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS Prestashop--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_magneto(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'Mage.Cookies' in ceks:
            print(kuning + '[Found CMS Magneto --> ]' + ijo + url)
            with open('cms/magneto.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS Magneto--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_vBulletin(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'vBulletin' in ceks:
            print(kuning + '[Found CMS vBulletin --> ]' + ijo + url)
            with open('cms/vBulletin.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS vBulletin--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def cms_osCommerce(url):
    try:
        ceks = requests.get(url, headers=users, timeout=15).text
        if 'osCommerce' in ceks:
            print(kuning + '[Found CMS osCommerce --> ]' + ijo + url)
            with open('cms/osCommerce.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found CMS osCommerce--> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def expl_Kcfinder(url):
    try:
        head = {'User-Agent': 'Mozilla/5.0 (Linux; Android 10; Redmi Note 9 Pro Build/QKQ1.191215.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/83.0.4103.101 Mobile Safari/537.36'}
        ajg = [
            'ckeditor/kcfinder/upload.php', 
            'kcfinder/upload.php', 
            'assets/kcfinder/upload.php', 
            'webboard/plugins/editors/kcfinder/upload.php', 
            'admin/editor/kcfinder/upload.php', 
            'ckeditor/plugins/kcfinder/upload.php', 
            'admin-panel/vendor/kcfinder/upload.php', 
            'assets/plugin/kcfinder/upload.php', 
            'plugins/kcfinder/upload.php', 
            'admin/kcfinder/upload.php', 
            'vendor/kcfinder/upload.php', 
            'painel/kcfinder/upload.php', 
            'panel/kcfinder/upload.php', 
            'yonetim/engine/ckeditor/kcfinder/upload.php', 
            'assets/admin/js/kcfinder/upload.php', 
            'js/kcfinder/upload.php',
            'upload/kcfinder/upload.php',
            'site/plugins/kcfinder/upload.php',
            'assets/js/kcfinder/upload.php',
            'app/libraries/kcfinder/upload.php',
            'modules/kcfinder/upload.php',
            'lib/kcfinder/upload.php',
            'uploads/kcfinder/upload.php',
            'storage/app/kcfinder/upload.php',
            'inc/kcfinder/upload.php',
            'assets/ckeditor/kcfinder/upload.php',
            'resources/kcfinder/upload.php',
            'modules/admin/editor/kcfinder/upload.php',
            'system/kcfinder/upload.php',
            'assets/admin/plugins/kcfinder/upload.php',
            'en/kcfinder/upload.php',
            'plugin/ckeditor/kcfinder/upload.php',
            'data/kcfinder/upload.php',
            'core/kcfinder/upload.php',
            'files/kcfinder/upload.php',
            'admin/public/kcfinder/upload.php',
            'media/kcfinder/upload.php',
            'modules/ckeditor/kcfinder/upload.php',
            'plugin/kcfinder/upload.php',
            'system/libraries/kcfinder/upload.php',
            'foo/kcfinder/upload.php',
            'bar/kcfinder/upload.php',
            'test/kcfinder/upload.php',
            'tmp/kcfinder/upload.php',
            'secret/kcfinder/upload.php',
            'logs/kcfinder/upload.php',
            'config/kcfinder/upload.php',
            'private/kcfinder/upload.php',
            'data/uploads/kcfinder/upload.php',
            'images/kcfinder/upload.php',
            'uploads/cache/kcfinder/upload.php',
            'assets/css/kcfinder/upload.php',
            'upload/images/kcfinder/upload.php',
            'img/kcfinder/upload.php',
            'filemanager/kcfinder/upload.php',
            'storage/kcfinder/upload.php',
            'uploads/files/kcfinder/upload.php',
            'gallery/kcfinder/upload.php',
            'vendor/assets/kcfinder/upload.php',
            'uploads/images/kcfinder/upload.php',
            'files/docs/kcfinder/upload.php',
            'config/config.kcfinder/upload.php',
            'assets/kcfinder/src/',
            'data/files/kcfinder/upload.php',
            'includes/kcfinder/upload.php',
            'resources/views/kcfinder/upload.php',
            'upload/files/kcfinder/upload.php',
            'cache/kcfinder/upload.php',
            'uploads/uploadfiles/kcfinder/upload.php',
            'library/kcfinder/upload.php',
            'system/assets/kcfinder/upload.php',
            'js/ckeditor/kcfinder/upload.php',
            'data/upload/kcfinder/upload.php',
            'tmp/cache/kcfinder/upload.php',
            'lib/ckeditor/kcfinder/upload.php',
            'data/file/kcfinder/upload.php',
            'js/libs/kcfinder/upload.php',
            'files/data/kcfinder/upload.php',
            'css/kcfinder/upload.php',
            'plugins/ckeditor/kcfinder/upload.php',
            'upload/images/uploads/kcfinder/upload.php',
            'site/ckeditor/kcfinder/upload.php',
            'assets/css/admin/kcfinder/upload.php',
            'uploads/uploads/kcfinder/upload.php',
            'public/kcfinder/upload.php',
            'upload/uploads/kcfinder/upload.php',
            'cache/images/kcfinder/upload.php',
            'app/assets/kcfinder/upload.php',
            'assets/cms/kcfinder/upload.php',
            'uploads/uploads/uploads/kcfinder/upload.php',
            'css/admin/kcfinder/upload.php',
            'uploads/files/files/kcfinder/upload.php',
            'upload/images/images/kcfinder/upload.php',
            'uploads/data/kcfinder/upload.php',
            'uploads/images/upload/kcfinder/upload.php',
            'uploads/images/files/kcfinder/upload.php',
            'uploads/data/files/kcfinder/upload.php',
            'ckeditor/kcfinder/upload.phpkcfinder/upload.php',
            'assets/kcfinder/upload.phpckeditor/',
            'uploads/upload/kcfinder/upload.php',
            'fileuploads/kcfinder/upload.php',
            'uploads/images/images/uploads/kcfinder/upload.php',
            'uploads/upload/upload/kcfinder/upload.php',
            'uploads/files/uploads/kcfinder/upload.php',
            'assets/ckeditor/plugins/kcfinder/upload.php',
            'uploads/images/upload/images/kcfinder/upload.php',
            'uploads/images/files/uploads/kcfinder/upload.php',
            'uploads/images/uploadfiles/kcfinder/upload.php',
            'uploads/files/upload/images/kcfinder/upload.php',
            'uploads/images/files/upload/kcfinder/upload.php'
        ]
        for path in ajg:
            urlx = url + '/' + path
            try:
                cek = requests.get(urlx, headers=head, timeout=15)
                if cek.status_code == 200:
                    print(kuning + '[Found KCFinder Upload Path --> ]' + ijo + urlx)
                    with open('cms/kcfinder.txt', 'a') as f:
                        f.write(urlx + '\n')
                else:
                    print(kuning + '[Not Found KCFinder Upload Path --> ]' + abang + urlx)
            except Exception as e:
                print(f"Error: {e}")
    except Exception as e:
        print(f"Error: {e}")

def revip(url):
    try:
        cek = requests.get(url + '/wp-admin/setup-config.php', headers=users, timeout=15)
        if 'Welcome to the installation' in cek.text:
            print(kuning + '[Found Wordpress Setup Page --> ]' + ijo + url)
            with open('cms/revip.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Wordpress Setup Page --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def revsub(url):
    try:
        cek = requests.get(url + '/wp-login.php', headers=users, timeout=15)
        if 'Log In' in cek.text:
            print(kuning + '[Found Wordpress Login Page --> ]' + ijo + url)
            with open('cms/revsub.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Wordpress Login Page --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def expl_Ftp(url):
    try:
        cek = requests.get(url + '/ftp/', headers=users, timeout=15)
        if cek.status_code == 200:
            print(kuning + '[Found FTP Directory --> ]' + ijo + url)
            with open('cms/expl_Ftp.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found FTP Directory --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def expl_phpunit(url):
    try:
        cek = requests.get(url + '/phpunit/', headers=users, timeout=15)
        if cek.status_code == 200:
            print(kuning + '[Found PHPUnit Directory --> ]' + ijo + url)
            with open('cms/expl_phpunit.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found PHPUnit Directory --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def expl_laravel(url):
    try:
        cek = requests.get(url + '/laravel/', headers=users, timeout=15)
        if cek.status_code == 200:
            print(kuning + '[Found Laravel Directory --> ]' + ijo + url)
            with open('cms/expl_laravel.txt', 'a') as f:
                f.write(url + '\n')
        else:
            print(kuning + '[Not Found Laravel Directory --> ]' + abang + url)
    except Exception as e:
        print(f"Error: {e}")

def check_target(url):
    if pilihmas == '1':
        cms_wordpress(url)
    elif pilihmas == '2':
        cms_joomla(url)
    elif pilihmas == '3':
        cms_laravel(url)
    elif pilihmas == '4':
        cms_opencart(url)
    elif pilihmas == '5':
        cms_drupal(url)
    elif pilihmas == '6':
        cms_prestashop(url)
    elif pilihmas == '7':
        cms_magneto(url)
    elif pilihmas == '8':
        cms_vBulletin(url)
    elif pilihmas == '9':
        cms_osCommerce(url)
    elif pilihmas == '10':
        expl_Kcfinder(url)
    elif pilihmas == '11':
        revip(url)
    elif pilihmas == '12':
        revsub(url)
    elif pilihmas == '13':
        expl_Ftp(url)
    elif pilihmas == '14':
        expl_phpunit(url)
    elif pilihmas == '15':
        expl_laravel(url)
    else:
        print(abang + '[Error] Pilihan tidak valid!')

if __name__ == "__main__":
    file_target = input('Masukkan nama file txt target (hanya domain http/https saja): ')
    if not os.path.isfile(file_target):
        print(abang + '[Error] File tidak ditemukan!')
        sys.exit(1)

    with open(file_target, 'r') as f:
        urls = [line.strip() for line in f if line.strip()]

    pool = Pool(10)
    pool.map(check_target, urls)
    pool.close()
    pool.join()
